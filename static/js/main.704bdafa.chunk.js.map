{"version":3,"sources":["logo.svg","features/counter/counterAPI.js","features/counter/counterSlice.js","components/Header.jsx","components/ModelSection.jsx","components/teslaProductsList.jsx","components/Home.jsx","components/Footer.jsx","App.js","app/store.js","serviceWorker.js","index.js","features/counter/Counter.module.css"],"names":["fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","Header","useState","burgerStatus","setBurgerStatus","Container","Logo","href","src","MainNav","MenuItem","onClick","BurgerMenu","show","CloseWrapper","CloseMenuIcon","styled","div","props","CloseIcon","ModelSection","title","description","leftCTAText","rightCTAText","bgImage","Wrapper","backgroundImage","bottom","SectionText","SectionCTA","ButtonGroup","LeftButton","RightButton","DownArrow","img","teslaProductsList","Home","map","product","key","Footer","FooterNav","ol","App","className","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.704bdafa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.b2e5a01e.svg\";","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from 'react'\r\nimport styled from \"styled-components\"\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nexport const Header = () => {\r\n    const [burgerStatus, setBurgerStatus] = useState(false);\r\n    return (\r\n        <div>           \r\n            {\r\n                /* Logo\r\n                Navigation\r\n                Account/Misc links */                \r\n            }\r\n            <Container>\r\n                <Logo>\r\n                    <a href=\"#\">\r\n                        <img src=\"images/logo.svg\" />\r\n                    </a>\r\n                </Logo>\r\n                <MainNav>\r\n                    <a href=\"#\">Model S</a>\r\n                    <a href=\"#\">Model 3</a>\r\n                    <a href=\"#\">Model X</a>\r\n                    <a href=\"#\">Model Y</a>\r\n                    <a href=\"#\">Solar Roof</a>\r\n                    <a href=\"#\">Solar Panels</a>\r\n                </MainNav>\r\n                <MenuItem>\r\n                    <a href=\"#\">Shop</a>\r\n                    <a href=\"#\">Account</a>\r\n                    <a href=\"#\" onClick={() => setBurgerStatus(true)}>Menu</a>                    \r\n                </MenuItem>\r\n                <BurgerMenu show={burgerStatus}> \r\n                    <CloseWrapper>\r\n                        <CloseMenuIcon onClick={() => setBurgerStatus(false)} />\r\n                    </CloseWrapper>                   \r\n                    <a href=\"#\">Existing Inventory</a>\r\n                    <a href=\"#\">Used Inventory</a>\r\n                    <a href=\"#\">Trade-In</a>\r\n                    <a href=\"#\">Powerwall</a>\r\n                    <a href=\"#\">Commercial Energy</a>\r\n                    <a href=\"#\">Utilities</a>\r\n                    <a href=\"#\">Test Drive</a>\r\n                    <a href=\"#\">Charging</a>\r\n                    <a href=\"#\">Find Us</a>\r\n                    <a href=\"#\">Support</a>\r\n                    <a href=\"#\">Careers</a>\r\n                    <a href=\"#\">Shop</a>\r\n                    <a href=\"#\">Account</a>\r\n                    <a href=\"#\">More</a>                       \r\n                </BurgerMenu>                                   \r\n            </Container>                        \r\n        </div>\r\n    )\r\n}\r\nconst Container = styled.div`\r\nmin-height: 60px;\r\nposition: fixed;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\ntop:0;\r\nleft:0;\r\nright:0;\r\nz-index: 1;\r\n`\r\nconst MainNav = styled.div`\r\na {\r\n   padding: 0 10px;\r\n   margin: 0 8px;\r\n   :hover{\r\n        background: border-box;\r\n        background-color: #A6ACAF;\r\n        border-radius: 15px;\r\n        padding: 5px 10px;             \r\n   }\r\n}\r\n@media (max-width:764px) {\r\n    display: none;\r\n}\r\n\r\n`\r\nconst MenuItem = styled.div`\r\na {\r\n    padding: 0 10px;\r\n    :hover{\r\n        background: border-box;\r\n        background-color: #A6ACAF;\r\n        border-radius: 15px;\r\n        padding: 5px 10px;        \r\n                \r\n   }\r\n}\r\n`\r\nconst Logo = styled.div`\r\npadding: 0 20px;\r\n`\r\nconst BurgerMenu = styled.div`\r\n    /*background-color: white;\r\n    min-height: 100vh;\r\n    width: 375px;\r\n    display: flex;\r\n    flex-direction: column;    \r\n    align-items: flex-start;\r\n    padding: 24px;\r\n    a {\r\n        margin: 10px;\r\n    }*/\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0; \r\n    bottom: 0;\r\n    background-color: white;\r\n    width: 350px;\r\n    display: flex;\r\n    flex-direction: column; \r\n    //align-items: flex-start; // align-items set will clash with nested flex\r\n    padding: 24px;\r\n    a {\r\n        margin: 10px;\r\n        padding-left: 8px;\r\n        text-align: left;\r\n    }\r\n    z-index:10;\r\n    transform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\r\n    transition: transform 0.5s;\r\n}\r\n`;\r\nconst CloseMenuIcon = styled(CloseIcon)`\r\n    cursor: pointer;\r\n    \r\n`;\r\nconst CloseWrapper = styled.div`\r\n    display: flex;    \r\n    justify-content: flex-end;\r\n    \r\n`;\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Fade from 'react-reveal/Fade'\r\n\r\nexport const ModelSection = (props) => {\r\n   const {title, description, leftCTAText, rightCTAText, bgImage} = props;\r\n    return (\r\n        <Wrapper backgroundImage={bgImage}>\r\n            <Fade bottom>\r\n                <SectionText>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </SectionText>\r\n            </Fade>            \r\n            <SectionCTA>\r\n                <Fade bottom>\r\n                    <ButtonGroup>\r\n                        <LeftButton>\r\n                            {leftCTAText}\r\n                        </LeftButton>\r\n                        {rightCTAText && \r\n                            <RightButton>\r\n                                {rightCTAText}\r\n                            </RightButton>\r\n                        }                    \r\n                    </ButtonGroup>\r\n                </Fade>                \r\n                <DownArrow src=\"images/down-arrow.svg\" />\r\n            </SectionCTA>                     \r\n        </Wrapper>\r\n    )\r\n}\r\nconst Wrapper = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;  \r\n    background-image: url('images/model-s.jpg');\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background-image: ${props => `url(\"images/${props.backgroundImage}\")`}   \r\n    \r\n`;\r\nconst SectionText = styled.div`\r\n    padding-top: 18vh;\r\n    text-align: center;    \r\n`;\r\nconst ButtonGroup = styled.div`\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    @media (max-width: 764px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\nconst LeftButton = styled.div`\r\n    background-color: rgba(23, 26, 32, 0.8);\r\n    color: #FFFFFF;\r\n    width: 256px;\r\n    height: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 100px;\r\n    opacity: 0.8;\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    margin: 10px;\r\n`;\r\nconst RightButton = styled(LeftButton)`\r\n    color:#171A20;\r\n    background-color: rgba(255, 255, 255, 0.8);\r\n`;\r\n\r\nconst DownArrow = styled.img`    \r\n    height: 40px;\r\n    animation: animateDownArrow infinite 1.5s;\r\n`;\r\n\r\nconst SectionCTA = styled.div`\r\n\r\n`;\r\n\r\n\r\n","export const teslaProductsList = [\r\n    {\r\n        title: \"Model S\",\r\n        description: \"Order Online for Touchless Delivery\",\r\n        leftCTAText: \"Custom Order\",\r\n        rightCTAText: \"Existing Inventory\",\r\n        bgImage: \"model-s.jpg\"\r\n    },\r\n    {\r\n        title: \"Model Y\",\r\n        description: \"Order Online for Touchless Delivery\",\r\n        leftCTAText: \"Custom Order\",\r\n        rightCTAText: \"Existing Inventory\",\r\n        bgImage: \"model-y.jpg\"\r\n    },\r\n    {\r\n        title: \"Model 3\",\r\n        description: \"Order Online for Touchless Delivery\",\r\n        leftCTAText: \"Custom Order\",\r\n        rightCTAText: \"Existing Inventory\",\r\n        bgImage: \"model-3.jpg\"\r\n    },\r\n    {\r\n        title: \"Model X\",\r\n        description: \"Order Online for Touchless Delivery\",\r\n        leftCTAText: \"Custom Order\",\r\n        rightCTAText: \"Existing Inventory\",\r\n        bgImage: \"model-x.jpg\"\r\n    },\r\n    {\r\n        title: \"Lowest Cost Solar Panels in America\",\r\n        description: \"Money-back guarantee\",\r\n        leftCTAText: \"Order Now\",\r\n        rightCTAText: \"Learn More\",\r\n        bgImage: \"solar-panel.jpg\"\r\n    },\r\n    {\r\n        title: \"Solar for New Roofs\",\r\n        description: \"Solar Roof Costs Less Than a New Roof Plus Solar Panels\",\r\n        leftCTAText: \"Order Now\",\r\n        rightCTAText: \"Learn More\",\r\n        bgImage: \"solar-roof.jpg\"\r\n    },\r\n    {\r\n        title: \"Accessories\",\r\n        description: \"\",\r\n        leftCTAText: \"Shop Now\",\r\n        rightCTAText: \"\",\r\n        bgImage: \"accessories.jpg\"\r\n    },\r\n];","import React from 'react'\r\nimport { ModelSection } from './ModelSection'\r\nimport styled from 'styled-components'\r\nimport { teslaProductsList } from './teslaProductsList'\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <Container>\r\n            {/* \r\n                Array of Model set/section \r\n                Each containing bg-image + Title/P + 2 CTA\r\n            */}\r\n            {\r\n                teslaProductsList && teslaProductsList.map((product, key) => {                   \r\n                    return(\r\n                        <ModelSection key={key} {...product} />\r\n                    );                    \r\n                })\r\n            }                       \r\n        </Container>\r\n    )\r\n}\r\nconst Container = styled.div`\r\n\r\n`;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <FooterNav>\r\n                    <li><a href=\"#\">Tesla © 2021</a></li>\r\n                    <li><a href=\"#\">Privacy & Legal</a></li>\r\n                    <li><a href=\"#\">Contact</a></li>\r\n                    <li><a href=\"#\">Careers</a></li>\r\n                    <li><a href=\"#\">Get Newsletter</a></li>\r\n                    <li><a href=\"#\">News</a></li>\r\n                    <li><a href=\"#\">Forums</a></li>\r\n                    <li><a href=\"#\">Locations</a></li>\r\n                </FooterNav>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nconst Container = styled.div`\r\n   min-height: 50px; \r\n`;\r\nconst FooterNav = styled.ol`\r\n    display: flex;\r\n    justify-content: center;  \r\n    align-items: flex-start;         \r\n    list-style: none;\r\n    li{\r\n        padding: 8px 16px;\r\n        a{\r\n            font-size: 12px;\r\n            font-weight: normal;\r\n        }\r\n    }\r\n`;","import React from 'react';\nimport logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Home } from './components/Home';\nimport { Footer } from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Header/>\n        <Home />\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__2NI4n\",\"value\":\"Counter_value__2Af45\",\"button\":\"Counter_button__2psL4\",\"textbox\":\"Counter_textbox__15hXB\",\"asyncButton\":\"Counter_asyncButton__230sl Counter_button__2psL4\"};"],"sourceRoot":""}